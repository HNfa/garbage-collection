<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.soft.dao.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.soft.model.Goods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="goodsName" property="goodsname" jdbcType="VARCHAR" />
    <result column="goodsType" property="goodstype" jdbcType="INTEGER" />
    <result column="goodsDesc" property="goodsdesc" jdbcType="VARCHAR" />
    <result column="imageUrl" property="imageurl" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="number" property="number" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, goodsName, goodsType, goodsDesc, imageUrl, price, number
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.soft.model.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.soft.model.GoodsExample" >
    delete from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.soft.model.Goods" >
    insert into goods (id, goodsName, goodsType, 
      goodsDesc, imageUrl, price, 
      number)
    values (#{id,jdbcType=INTEGER}, #{goodsname,jdbcType=VARCHAR}, #{goodstype,jdbcType=INTEGER}, 
      #{goodsdesc,jdbcType=VARCHAR}, #{imageurl,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{number,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.soft.model.Goods" >
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="goodsname != null" >
        goodsName,
      </if>
      <if test="goodstype != null" >
        goodsType,
      </if>
      <if test="goodsdesc != null" >
        goodsDesc,
      </if>
      <if test="imageurl != null" >
        imageUrl,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="number != null" >
        number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsname != null" >
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="goodstype != null" >
        #{goodstype,jdbcType=INTEGER},
      </if>
      <if test="goodsdesc != null" >
        #{goodsdesc,jdbcType=VARCHAR},
      </if>
      <if test="imageurl != null" >
        #{imageurl,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.soft.model.GoodsExample" resultType="java.lang.Integer" >
    select count(*) from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goodsname != null" >
        goodsName = #{record.goodsname,jdbcType=VARCHAR},
      </if>
      <if test="record.goodstype != null" >
        goodsType = #{record.goodstype,jdbcType=INTEGER},
      </if>
      <if test="record.goodsdesc != null" >
        goodsDesc = #{record.goodsdesc,jdbcType=VARCHAR},
      </if>
      <if test="record.imageurl != null" >
        imageUrl = #{record.imageurl,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods
    set id = #{record.id,jdbcType=INTEGER},
      goodsName = #{record.goodsname,jdbcType=VARCHAR},
      goodsType = #{record.goodstype,jdbcType=INTEGER},
      goodsDesc = #{record.goodsdesc,jdbcType=VARCHAR},
      imageUrl = #{record.imageurl,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      number = #{record.number,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.soft.model.Goods" >
    update goods
    <set >
      <if test="goodsname != null" >
        goodsName = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="goodstype != null" >
        goodsType = #{goodstype,jdbcType=INTEGER},
      </if>
      <if test="goodsdesc != null" >
        goodsDesc = #{goodsdesc,jdbcType=VARCHAR},
      </if>
      <if test="imageurl != null" >
        imageUrl = #{imageurl,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.soft.model.Goods" >
    update goods
    set goodsName = #{goodsname,jdbcType=VARCHAR},
      goodsType = #{goodstype,jdbcType=INTEGER},
      goodsDesc = #{goodsdesc,jdbcType=VARCHAR},
      imageUrl = #{imageurl,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      number = #{number,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>